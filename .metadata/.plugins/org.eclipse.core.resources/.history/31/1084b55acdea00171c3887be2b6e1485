package daa38.MapColouring.Auxiliary;

public class IntMatrixElement {

	private int[][] mMatrix;
	private MatrixPosition mPos;
	
	public IntMatrixElement(int[][] pMatrix, MatrixPosition pPos)
	{
		mMatrix=pMatrix;
		mPos = pPos;
	}
	
	public IntMatrixElement up()
	{
		return new IntMatrixElement(mMatrix,mPos.up());
	}

	public IntMatrixElement left()
	{
		return new IntMatrixElement(mMatrix,mPos.left());
	}

	public IntMatrixElement down()
	{
		return new IntMatrixElement(mMatrix,new MatrixPosition( mPos.mRow+1 , mPos.mCol   ));
	}

	public IntMatrixElement right()
	{
		return new IntMatrixElement(mMatrix,new MatrixPosition( mPos.mRow   , mPos.mCol+1 ));
	}
	
	public boolean isInsideMatrix()
	{
		if (mPos.mRow>=mMatrix.length)
			return false;
		if (mPos.mRow<0)
			return false;
		
		if (mPos.mCol>=mMatrix[mPos.mRow].length)
			return false;
		if (mPos.mCol<0)
			return false;
		
		return true;
	}
	
	public int get()
	{
		return mMatrix[mPos.mRow][mPos.mCol];
	}
	
	public void set(int pInt)
	{
		mMatrix[mPos.mRow][mPos.mCol] = pInt;
	}
}
