package daa38.CSP.Auxiliary;

import java.util.ArrayList;
import java.util.HashMap;

public class StepFrame {
	public Variable mVar; //Variable to assign at this frame
	public ArrayList<Integer> mValsToGo; //Values that can be used for current variable
	public ArrayList<VariablesRestrictions> mRes; //Restrictions imposed on other variables due to value at same index
	public int mNowValIndex; //Current value's index

	public StepFrame(Variable pVar)
	{
		mVar = pVar;
		mValsToGo = new ArrayList<Integer>();
		mRes = new ArrayList< VariablesRestrictions >();
		mNowValIndex = -1;
	}
	
	public void resetFrame()
	{
		mValsToGo.clear();
		mRes.clear();
		mNowValIndex = -1;
	}
	
	public void assignValue()
	{
		if (this.mVar.mValue!=-1)
		{
			System.out.println("assignValue() was called when a value was already assigned; removing assigned value");
			this.removeValue();
		}
		
		int lValueIndex = this.mNowValIndex;
		this.mVar.mValue = this.mValsToGo.get(lValueIndex);
		this.mRes.get(lValueIndex).enforceRestrictions();
	}
	
	public void removeValue()
	{
		if (this.mVar.mValue)
		
		int lValueIndex = this.mNowValIndex;
		this.mVar.mValue = -1;
		this.mRes.get(lValueIndex).liftRestrictions();
	}
	
	public void outputFrame()
	{
		System.out.print("Variable to assign: "+this.mVar);
		System.out.println();
		
		System.out.print("Values the variable can take:");
		for (Integer lInt : this.mValsToGo)
			System.out.print(" "+lInt);
		System.out.println();
		System.out.println();
		
		System.out.println("Current value index: "+this.mNowValIndex);
		System.out.println();
		
	}
}
